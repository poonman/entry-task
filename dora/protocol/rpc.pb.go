// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Head_MessageType int32

const (
	Head_Request   Head_MessageType = 0
	Head_Response  Head_MessageType = 1
	Head_Heartbeat Head_MessageType = 2
)

var Head_MessageType_name = map[int32]string{
	0: "Request",
	1: "Response",
	2: "Heartbeat",
}

var Head_MessageType_value = map[string]int32{
	"Request":   0,
	"Response":  1,
	"Heartbeat": 2,
}

func (x Head_MessageType) String() string {
	return proto.EnumName(Head_MessageType_name, int32(x))
}

func (Head_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0, 0}
}

type Head struct {
	Version              int32            `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	MessageType          Head_MessageType `protobuf:"varint,2,opt,name=message_type,json=messageType,proto3,enum=protocol.Head_MessageType" json:"message_type,omitempty"`
	SerializeType        string           `protobuf:"bytes,3,opt,name=serialize_type,json=serializeType,proto3" json:"serialize_type,omitempty"`
	Seq                  uint64           `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Head) GetMessageType() Head_MessageType {
	if m != nil {
		return m.MessageType
	}
	return Head_Request
}

func (m *Head) GetSerializeType() string {
	if m != nil {
		return m.SerializeType
	}
	return ""
}

func (m *Head) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type PkgHead struct {
	Head                 *Head             `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Method               string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,3,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PkgHead) Reset()         { *m = PkgHead{} }
func (m *PkgHead) String() string { return proto.CompactTextString(m) }
func (*PkgHead) ProtoMessage()    {}
func (*PkgHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *PkgHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PkgHead.Unmarshal(m, b)
}
func (m *PkgHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PkgHead.Marshal(b, m, deterministic)
}
func (m *PkgHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PkgHead.Merge(m, src)
}
func (m *PkgHead) XXX_Size() int {
	return xxx_messageInfo_PkgHead.Size(m)
}
func (m *PkgHead) XXX_DiscardUnknown() {
	xxx_messageInfo_PkgHead.DiscardUnknown(m)
}

var xxx_messageInfo_PkgHead proto.InternalMessageInfo

func (m *PkgHead) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *PkgHead) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PkgHead) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.Head_MessageType", Head_MessageType_name, Head_MessageType_value)
	proto.RegisterType((*Head)(nil), "protocol.Head")
	proto.RegisterType((*PkgHead)(nil), "protocol.PkgHead")
	proto.RegisterMapType((map[string]string)(nil), "protocol.PkgHead.MetaEntry")
}

func init() {
	proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1)
}

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0xcf, 0x4b, 0xc3, 0x30,
	0x18, 0x35, 0x6b, 0xf7, 0x23, 0x5f, 0xb7, 0x51, 0x82, 0x48, 0x99, 0x97, 0x52, 0x10, 0x7a, 0xaa,
	0x30, 0x0f, 0x13, 0xc1, 0x8b, 0x20, 0xec, 0x32, 0x90, 0xe0, 0xc9, 0x8b, 0x64, 0xdb, 0xc7, 0x56,
	0xd6, 0x36, 0x5d, 0x92, 0x0d, 0xea, 0x3f, 0xe5, 0xdf, 0xe2, 0x7f, 0x24, 0xcd, 0xba, 0x4e, 0x4f,
	0x79, 0xef, 0xcb, 0xfb, 0xde, 0xcb, 0x23, 0x40, 0x55, 0xb9, 0x4a, 0x4a, 0x25, 0x8d, 0x64, 0x03,
	0x7b, 0xac, 0x64, 0x16, 0xfd, 0x10, 0x70, 0xe7, 0x28, 0xd6, 0x2c, 0x80, 0xfe, 0x11, 0x95, 0x4e,
	0x65, 0x11, 0x90, 0x90, 0xc4, 0x5d, 0x7e, 0xa6, 0xec, 0x19, 0x86, 0x39, 0x6a, 0x2d, 0x36, 0xf8,
	0x69, 0xaa, 0x12, 0x83, 0x4e, 0x48, 0xe2, 0xf1, 0x74, 0x92, 0x9c, 0x3d, 0x92, 0x7a, 0x3f, 0x59,
	0x9c, 0x24, 0xef, 0x55, 0x89, 0xdc, 0xcb, 0x2f, 0x84, 0xdd, 0xc1, 0x58, 0xa3, 0x4a, 0x45, 0x96,
	0x7e, 0x35, 0x06, 0x4e, 0x48, 0x62, 0xca, 0x47, 0xed, 0xd4, 0xca, 0x7c, 0x70, 0x34, 0xee, 0x03,
	0x37, 0x24, 0xb1, 0xcb, 0x6b, 0x18, 0xcd, 0xc0, 0xfb, 0x63, 0xca, 0x3c, 0xe8, 0x73, 0xdc, 0x1f,
	0x50, 0x1b, 0xff, 0x8a, 0x0d, 0x61, 0xc0, 0x51, 0x97, 0xb2, 0xd0, 0xe8, 0x13, 0x36, 0x02, 0x3a,
	0x47, 0xa1, 0xcc, 0x12, 0x85, 0xf1, 0x3b, 0xd1, 0x37, 0x81, 0xfe, 0xdb, 0x6e, 0x63, 0x6b, 0x45,
	0xe0, 0x6e, 0x51, 0xac, 0x6d, 0x27, 0x6f, 0x3a, 0xfe, 0xff, 0x68, 0x6e, 0xef, 0xd8, 0x0d, 0xf4,
	0x72, 0x34, 0x5b, 0xb9, 0xb6, 0xd5, 0x28, 0x6f, 0x18, 0xbb, 0x07, 0x37, 0x47, 0x23, 0x02, 0x27,
	0x74, 0x62, 0x6f, 0x7a, 0x7b, 0xd9, 0x6d, 0xcc, 0x93, 0x05, 0x1a, 0xf1, 0x5a, 0x18, 0x55, 0x71,
	0x2b, 0x9c, 0xcc, 0x80, 0xb6, 0xa3, 0xba, 0xd0, 0x0e, 0x2b, 0x1b, 0x4c, 0x79, 0x0d, 0xd9, 0x35,
	0x74, 0x8f, 0x22, 0x3b, 0x60, 0x13, 0x73, 0x22, 0x4f, 0x9d, 0x47, 0xf2, 0x02, 0x1f, 0xed, 0x8f,
	0x2c, 0x7b, 0x16, 0x3d, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0x99, 0xb0, 0x91, 0x35, 0xaf, 0x01,
	0x00, 0x00,
}
